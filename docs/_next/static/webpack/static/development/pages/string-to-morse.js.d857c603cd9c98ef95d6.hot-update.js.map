{"version":3,"file":"static/webpack/static/development/pages/string-to-morse.js.d857c603cd9c98ef95d6.hot-update.js","sources":["webpack:///./pages/string-to-morse.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  FormRadio,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormTextarea,\n  FormInput\n} from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport {\n  StringToMorse as fn,\n  StringToMorseCode as code,\n  IMC_LIST\n} from \"../utils/stringToMorse\";\nimport Layout from \"../components/layout/MainLayout\";\nimport ListMap from \"../components/common/ListMap\";\n\nclass StringToMorseConvertor extends React.Component {\n  IMC = IMC_LIST();\n  state = {\n    input: \"\",\n    output: \"\"\n  };\n\n  handleTextInputChange = e => {\n    this.setState({\n      input: e.target.value,\n      output: fn(e.target.value)\n    });\n  };\n  render() {\n    const { input, output } = this.state;\n    return (\n      <Layout>\n        <Container fluid className=\"main-content-container px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"String To Morse Code Convertor\"\n              subtitle=\"Morse encoder\"\n              md=\"12\"\n              className=\"ml-sm-auto mr-sm-auto\"\n            />\n          </Row>\n          <Row>\n            <Col lg=\"12\">\n              <Card small className=\"mb-4\">\n                <ListGroup flush>\n                  <ListGroupItem className=\"p-3\">\n                    <Row>\n                      <Col>\n                        <Form>\n                          <Row form>\n                            {/* Description */}\n                            <Col md=\"6\" className=\"form-group\">\n                              <label htmlFor=\"feDescription\">String</label>\n                              <FormTextarea\n                                id=\"feDescription\"\n                                placeholder=\"Save the world! \"\n                                rows=\"5\"\n                                onChange={this.handleTextInputChange}\n                                value={input}\n                              />\n                            </Col>\n                            <Col md=\"6\" className=\"form-group\">\n                              <label htmlFor=\"feDescription\">Morse Code</label>\n                              <FormTextarea\n                                id=\"feDescription\"\n                                placeholder=\"Your text here... ?\"\n                                rows=\"5\"\n                                value={output}\n                                onChange={() => {}}\n                              />\n                            </Col>\n                          </Row>\n                        </Form>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"p-4\">\n                    <strong className=\"text-muted d-block mb-2\">\n                      How it Works\n                    </strong>\n                    <pre className=\"code-part\">\n                      <code className=\"javascript p-3\">{code}</code>\n                      {/* <button\n                      theme=\"white\"\n                      className=\"copy-button\"\n                      data-clipboard-text={convertohexCode}\n                    >\n                      <i className=\"material-icons\">file_copy</i>\n                   </button>*/}\n                    </pre>\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    <Row>\n                      <Col lg=\"4\">\n                        <ListMap\n                          title=\"International Morse code\"\n                          list={this.IMC.slice(\n                            0,\n                            Math.ceil(this.IMC.length / 3)\n                          )}\n                        />\n                      </Col>\n                      <Col lg=\"4\">\n                        <ListMap\n                          title=\"International Morse code\"\n                          list={this.IMC.slice(\n                            Math.ceil(this.IMC.length / 3),\n                            Math.ceil((this.IMC.length / 3) * 2)\n                          )}\n                        />\n                      </Col>\n                      <Col lg=\"4\">\n                        <ListMap\n                          title=\"International Morse code\"\n                          list={this.IMC.slice(\n                            Math.ceil((this.IMC.length / 3) * 2),\n                            this.IMC.length\n                          )}\n                        />\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"p-4\">\n                    <strong className=\"text-muted d-block mb-2\">\n                      About Morse Code\n                    </strong>\n                    <p>\n                      Morse code is a character encoding scheme used in\n                      telecommunication that encodes text characters as\n                      standardized sequences of two different signal durations\n                      called dots and dashes or dits and dahs.[2][3] Morse code\n                      is named for Samuel F. B. Morse, an inventor of the\n                      telegraph.\n                    </p>\n                    <p>\n                      The International Morse Code encodes the 26 English\n                      letters A through Z, some non-English letters, the Arabic\n                      numerals and a small set of punctuation and procedural\n                      signals (prosigns). There is no distinction between upper\n                      and lower case letters. Each Morse code symbol is formed\n                      by a sequence of dots and dashes. The dot duration is the\n                      basic unit of time measurement in Morse code transmission.\n                      The duration of a dash is three times the duration of a\n                      dot. Each dot or dash within a character is followed by\n                      period of signal absence, called a space, equal to the dot\n                      duration. The letters of a word are separated by a space\n                      of duration equal to three dots, and the words are\n                      separated by a space equal to seven dots. To increase the\n                      efficiency of encoding, Morse code was designed so that\n                      the length of each symbol is approximately inverse to the\n                      frequency of occurrence in text of the English language\n                      character that it represents. Thus the most common letter\n                      in English, the letter \"E\", has the shortest code: a\n                      single dot. Because the Morse code elements are specified\n                      by proportion rather than specific time durations, the\n                      code is usually transmitted at the highest rate that the\n                      receiver is capable of decoding. The Morse code\n                      transmission rate (speed) is specified in groups per\n                      minute, commonly referred to as words per minute.\n                    </p>\n                    <p>\n                      Unicode now replaces ASCII, ISO 8859 and EUC at all\n                      levels. It enables users to handle not only practically\n                      any script and language used on this planet, it also\n                      supports a comprehensive set of mathematical and technical\n                      symbols to simplify scientific information exchange.\n                      <a href=\"https://www.cl.cam.ac.uk/~mgk25/unicode.html\">\n                        UTF-8 and Unicode FAQ for Unix/Linux\n                      </a>\n                    </p>\n                  </ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default StringToMorseConvertor;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAYA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAanKA;AACA;AAqKA;;;;A","sourceRoot":""}