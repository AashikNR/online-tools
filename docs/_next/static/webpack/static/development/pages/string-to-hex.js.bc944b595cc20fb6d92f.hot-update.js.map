{"version":3,"file":"static/webpack/static/development/pages/string-to-hex.js.bc944b595cc20fb6d92f.hot-update.js","sources":["webpack:///./pages/string-to-hex.js"],"sourcesContent":["import Layout from \"../components/layout/MainLayout\";\nimport React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  FormRadio,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  FormTextarea,\n  FormInput,\n} from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport { convertStringToHEX, convertohexCode } from \"../utils/stringToHex\";\n\nclass StringToHexConvertor extends React.Component {\n  state = {\n    text: \"\",\n    hexValue: \"\",\n    option: \"1\",\n    separator: \"\",\n  };\n\n  getCurrentSeparator = (o) => {\n    const { option, separator } = this.state;\n    switch (o || option) {\n      case \"1\":\n        return \"0x\";\n      case \"2\":\n        return \"%u\";\n      case \"3\":\n        return \"\";\n      case \"4\":\n        return separator;\n\n      default:\n        break;\n    }\n  };\n  handleTextInputChange = (e) => {\n    this.setState({\n      text: e.target.value,\n      hexValue: convertStringToHEX(e.target.value, this.getCurrentSeparator()),\n    });\n  };\n  handleSeparatorChange = (e) => {\n    const { text } = this.state;\n\n    this.setState({\n      separator: e.target.value,\n      hexValue: convertStringToHEX(text, e.target.value),\n    });\n  };\n  handleOptionChange = (o) => {\n    this.setState({\n      option: o,\n      text: this.state.text,\n      hexValue: convertStringToHEX(\n        this.state.text,\n        this.getCurrentSeparator(o)\n      ),\n    });\n  };\n  render() {\n    const { text, hexValue, option, separator } = this.state;\n    return (\n      <Layout>\n        <Container fluid className=\"main-content-container px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"String To Hex Convertor\"\n              subtitle=\"Character to Unicode Binary \"\n              md=\"12\"\n              className=\"ml-sm-auto mr-sm-auto\"\n            />\n          </Row>\n          <Row>\n            <Col lg=\"12\">\n              <Card small className=\"mb-4\">\n                <ListGroup flush>\n                  <ListGroupItem className=\"p-3\">\n                    <Row>\n                      <Col>\n                        <Form>\n                          <Row form>\n                            {/* Description */}\n                            <Col md=\"6\" className=\"form-group\">\n                              <label htmlFor=\"feDescription\">Text</label>\n                              <FormTextarea\n                                id=\"feDescription\"\n                                placeholder=\"Your text here... !┓ ₢�kkk?\"\n                                rows=\"5\"\n                                onChange={this.handleTextInputChange}\n                                value={text}\n                              />\n                            </Col>\n                            <Col md=\"6\" className=\"form-group\">\n                              <label htmlFor=\"feDescription\">Hex</label>\n                              <FormTextarea\n                                id=\"feDescription\"\n                                placeholder=\"0x00210x25130x00200x20a20xfffd0x006b0x006b0x006b0x003f \"\n                                rows=\"5\"\n                                value={hexValue}\n                                onChange={() => {}}\n                              />\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col className=\"mb-3 block-options\" md=\"6\">\n                              <h5>Separator</h5>\n                              <FormRadio\n                                name=\"option\"\n                                checked={option === \"1\"}\n                                onChange={() => this.handleOptionChange(\"1\")}\n                              >\n                                0X\n                              </FormRadio>\n                              <FormRadio\n                                name=\"option\"\n                                checked={option === \"2\"}\n                                onChange={() => this.handleOptionChange(\"2\")}\n                              >\n                                %u\n                              </FormRadio>\n                              <FormRadio\n                                name=\"option\"\n                                checked={option === \"3\"}\n                                onChange={() => this.handleOptionChange(\"3\")}\n                              >\n                                none\n                              </FormRadio>\n                              <FormRadio\n                                name=\"option\"\n                                checked={option === \"4\"}\n                                onChange={() => this.handleOptionChange(\"4\")}\n                              >\n                                custom\n                              </FormRadio>\n                            </Col>\n                            <Col md=\"6\">\n                              {option === \"4\" ? (\n                                <div>\n                                  <label htmlFor=\"customSeparator\">\n                                    Custom Separator\n                                  </label>\n\n                                  <FormInput\n                                    id=\"customSeparator\"\n                                    placeholder=\"separator(eg:%u)\"\n                                    value={separator}\n                                    onChange={this.handleSeparatorChange}\n                                  />\n                                </div>\n                              ) : (\n                                \"\"\n                              )}\n                            </Col>\n                            <Col className=\"mb-3\" />\n                          </Row>\n                        </Form>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"p-4\">\n                    <strong className=\"text-muted d-block mb-2\">\n                      How it Works\n                    </strong>\n                    <pre className=\"code-part\">\n                      <code className=\"javascript p-3\">{convertohexCode}</code>\n                      {/* <button\n                      theme=\"white\"\n                      className=\"copy-button\"\n                      data-clipboard-text={convertohexCode}\n                    >\n                      <i className=\"material-icons\">file_copy</i>\n                   </button>*/}\n                    </pre>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"p-4\">\n                    <strong className=\"text-muted d-block mb-2\">\n                      About Unicode\n                    </strong>\n                    <p>\n                      Unicode serves as a standard for computers to display\n                      character data from any language. There are many\n                      variations of the Unicode standard, including UTF-7,\n                      UTF-8, UTF-16, UCS-2, as well as Big Endian / Little\n                      Endian byte order variations.\n                    </p>\n                    <p>\n                      Traditionally, the ASCII standard used 1 byte to store 1\n                      character, resulting in 256 combinations. Unlike the ASCII\n                      standard, Unicode character data utilizes multiple bytes\n                      per character. This increases the number of possible\n                      characters, and this may vary depending on what variation\n                      of the Unicode standard is in use.\n                    </p>\n                    <p>\n                      Unicode now replaces ASCII, ISO 8859 and EUC at all\n                      levels. It enables users to handle not only practically\n                      any script and language used on this planet, it also\n                      supports a comprehensive set of mathematical and technical\n                      symbols to simplify scientific information exchange.\n                      <a href=\"https://www.cl.cam.ac.uk/~mgk25/unicode.html\">\n                        UTF-8 and Unicode FAQ for Unix/Linux\n                      </a>\n                    </p>\n                  </ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nStringToHexConvertor.getInitialProps = () => {\n  return {};\n};\n\nexport default StringToHexConvertor;\n"],"mappings":"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","sourceRoot":""}