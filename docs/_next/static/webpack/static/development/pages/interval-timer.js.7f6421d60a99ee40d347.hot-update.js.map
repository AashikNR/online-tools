{"version":3,"file":"static/webpack/static/development/pages/interval-timer.js.7f6421d60a99ee40d347.hot-update.js","sources":["webpack:///./pages/interval-timer.js"],"sourcesContent":["import Layout from \"../components/layout/MainLayout\";\nimport React from \"react\";\nimport { Container, Col, Card } from \"shards-react\";\nimport \"../static/css/interval-timer.css\";\n\nfunction str_pad_left(string, pad, length) {\n  return (new Array(length + 1).join(pad) + string).slice(-length);\n}\nconst init = {\n  display: \"10:00\",\n  timeElapsed: 0,\n  target: 10 * 60, // mins\n  workMode: true,\n  running: false\n};\nclass IntervalTimer extends React.Component {\n  componentDidMount() {\n    this.startBreak = new Audio(\"../static/sounds/start-break.wav\");\n    this.endBreak = new Audio(\"../static/sounds/end-break.wav\");\n  }\n\n  state = init;\n  timer;\n  handleStartTimer = () => {\n    console.log(\"====================================\");\n    console.log(this);\n    console.log(\"====================================\");\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = setInterval(() => {\n      const { target, timeElapsed, workMode } = this.state;\n      const minutes = ~~((target - timeElapsed) / 60);\n      const seconds = (target - timeElapsed) % 60;\n      const finalTime =\n        str_pad_left(minutes, \"0\", 2) + \":\" + str_pad_left(seconds, \"0\", 2);\n      if (!minutes && !seconds) {\n        this.setState({\n          timeElapsed: 0,\n          display: finalTime,\n          workMode: !workMode,\n          target: workMode ? 2 * 60 : 10 * 60\n        });\n        if (workMode) {\n          // stop tune\n          this.startBreak.play();\n        } else {\n          this.endBreak.play();\n        }\n      } else {\n        this.setState({\n          timeElapsed: timeElapsed + 1,\n          display: finalTime,\n          running: true\n        });\n      }\n    }, 1000);\n  };\n  render() {\n    const { display, running } = this.state;\n\n    return (\n      <Layout>\n        <Container fluid className=\"main-content-container px-4 noisy\">\n          <div className=\"emblem\">\n            <span className=\"icon-information\"></span>\n          </div>\n          <div className=\"frame\">\n            <div className=\"piece output\">\n              <h1>{display}</h1>\n            </div>\n\n            <div className=\"piece scanlines noclick\"></div>\n            <div className=\"piece glow noclick\"></div>\n          </div>\n          <div className=\"controls\">\n            <button\n              onClick={this.handleStartTimer}\n              theme=\"white\"\n              className=\"play-button\"\n            >\n              <i className=\"material-icons\">play_arrow</i>\n              Start\n            </button>\n          </div>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default IntervalTimer;\n\n// <Row noGutters className=\"page-header py-4\">\n//   <PageTitle\n//     title=\"String To Hex Convertor\"\n//     subtitle=\"Character to Unicode Binary \"\n//     md=\"12\"\n//     className=\"ml-sm-auto mr-sm-auto\"\n//   />\n// </Row>\n// <Row>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AALA;AACA;AAMA;;;;;;;;;;;;;;;;;;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;;;AA1CA;AACA;AACA;AACA;;;AAuCA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAzEA;AACA;AA2EA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}