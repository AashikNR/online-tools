{"version":3,"file":"static/webpack/static/development/pages/string-to-morse.js.8cf04ea06ef8779c76e1.hot-update.js","sources":["webpack:///./utils/stringToMorse.js"],"sourcesContent":["/**\n *\n * @param {*} string\n */\nexport function StringToMorse(str) {\n  let output = \"\";\n  [...str].forEach(c => {\n    output = output + \" \" + (MORSE_MAP[c.toUpperCase()] || \"\");\n  });\n  return output;\n}\n// build output will uglify the above code so making it a string\nexport const StringToMorseCode = `\n/**\n *\n * @param {*} string\n */\nfunction StringToMorse(str) {\n  let output = \"\";\n  [...str].forEach(c => {\n    output = output + \" \" + (MORSE_MAP[c.toUpperCase()] || \"\");\n  });\n  return output;\n}\n// this list of international morse codes\nconst MORSE_MAP = {};\n`;\nexport function IMC_LIST() {\n  return Object.keys(MORSE_MAP).map(k => {\n    return { title: k, value: MORSE_MAP[k] };\n  });\n}\nexport const MORSE_MAP = {\n  A: \".-\",\n  B: \"-...\",\n  C: \"-.-.\",\n  D: \"-..\",\n  E: \".\",\n  F: \"..-.\",\n  G: \"--.\",\n  H: \"....\",\n  I: \"..\",\n  J: \".---\",\n  K: \"-.-\",\n  L: \".-..\",\n  M: \"--\",\n  N: \"-.\",\n  O: \"---\",\n  P: \".--.\",\n  Q: \"--.-\",\n  R: \".-.\",\n  S: \"...\",\n  T: \"-\",\n  U: \"..-\",\n  V: \"...-\",\n  W: \".--\",\n  X: \"-..-\",\n  Y: \"-.--\",\n  Z: \"--..\",\n  1: \".----\",\n  2: \"..---\",\n  3: \"...--\",\n  4: \"....-\",\n  5: \".....\",\n  6: \"-....\",\n  7: \"--...\",\n  8: \"---..\",\n  9: \"----.\",\n  0: \"-----\",\n  \".\": \".-.-.-\",\n  \",\": \"--..--\",\n  \":\": \"---...\",\n  \"?\": \"..--..\",\n  \"'\": \".----.\",\n  \"-\": \"-....-\",\n  \"/\": \"-..-.\",\n  \"(\": \"-.--.\",\n  \")\": \"-.--.-\",\n  '\"': \".-..-.\",\n  \"@\": \".--.-.\",\n  \"=\": \"-...-\",\n  \"&\": \".-...\",\n  \"+\": \".-.-.\",\n  \"!\": \"-.-.--\"\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;;;A","sourceRoot":""}